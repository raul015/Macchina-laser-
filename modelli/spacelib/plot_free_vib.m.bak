function plot_free_vib(V,D,coeff,endTime)
% prof. Paolo Righettini
% vibrazioni meccaniche
% function plot_free_vib(V,D,coeff,endTime)
% coeff: vettore della combinazione lineare dei modi
% V, D: matrici di eig

k=1;
npt=1000;
[n]=size(D,1); 

%%determino la massima pulsazione propria
wmax=0;
for k=1:n
    w = sqrt(D(k,k));
    if w > wmax 
        wmax=w;
    end
end
fmax = w/(2*pi);

dt=endTime/npt;
for t=0:dt:endTime
    xn = get_free_vibr(V,D,coeff,t);
    for j=1:n
        x(k,j) = xn(j);
    end
    tt(k)=t;
    k=k+1;
end
    
figure; set(gcf,'name','risposta libera - posizioni');
for k=1:n
	subplot(n,1,k);plot(tt,x(:,k));grid;title(['coordinata x' num2str(k) '(t)']);
end

figure; set(gcf,'name','risposta libera - frequenze');
Fs = 1/dt;
for k=1:n
	subplot(n,1,k);

    [amp vf]=calcFFT(x(:,k) , Fs);
    %Y=fft(x(:,1),npt);

    %Pyy = Y.*conj(Y)/npt;
    %fs=1/dt;
    %f = fs/npt*(0:npt/2);
    nptplot = round((length(vf))*5*fmax/(Fs/2));
    %plot(f(1:npt/2),Pyy(1:npt/2))
    %plot(f(1:nptplot),Pyy(1:nptplot))
    plot(vf(1:nptplot),amp(1:nptplot))
    
    %plot(tt,x(:,k));
    grid on;
    %title(['Power spectral density - coordinata x' num2str(k) '(t)']);
    title(['ampiezze - coordinata x' num2str(k) '(t)']);
    xlabel('Frequency (Hz)')
end

return

